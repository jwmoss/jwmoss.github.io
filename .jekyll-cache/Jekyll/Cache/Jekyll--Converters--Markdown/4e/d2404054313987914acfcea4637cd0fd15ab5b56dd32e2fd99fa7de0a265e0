I":<h1 id="my-powershell-journey">My Powershell Journey</h1>

<p>I’ve met a handful of folks who, when I talk to them about automating the boring stuff, they tend to shrug it off and say “I don’t have time” or “I’m not a developer”. This blog is for you (or if you want to know my journey of how I changed my career by learning Powershell).</p>

<p>I’ve been in IT for over 5 years, and have specifically been using Powershell at work for the last 3 years, and meaningfully in the last 2 years.</p>

<h2 id="a-powershell-noob">A Powershell Noob</h2>

<p>Two years ago, I was using powershell to run a handful of “one-liners”. Such as:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Get-ADUser</span><span class="w"> </span><span class="nt">-Identity</span><span class="w"> </span><span class="nx">jmoss</span><span class="w">
</span></code></pre></div></div>

<p>Which returned some interesting data. With this in mind, I would simply find the data I’m looking for, and paste it into notepad or an email to my boss. What I didn’t realize was this concept that <strong>properties should be treated as objects.</strong></p>

<p>Once I realized that most of what I write in Powershell can be treated as an object, a light-bulb clicked. This happend about a year and a half ago, in early 2017. It was then where I realized that I had approached Powershell all wrong. It wasn’t just another prompt to view an IP Address or list a phone number of an Active Directory user, it was the glue to automating everything I need and exporting it to anything I want.</p>

<p>It was at this point when I started to really kick it into high gear and force myself to use Powershell daily, and not just to get information randomly.</p>

<h2 id="walking-with-powershell">Walking with Powershell</h2>

<p>At an old company I used to work for, our IT department would receive html files from a vendor that included a bunch of tables with data in them, which needed to be exported to a txt file and <em>finally</em> imported into a SQL Server. The vendor had been sending us data in this format because their ERP only allowed for that (what year is it?!!??!?).</p>

<p>Our IT department was spending 1.5 hours <em>a day</em> parsing this data manually. There was clearly a problem that could be resolved with Powershell.</p>

<p>I used Powershell to parse the data in these HTML files using <a href="https://github.com/dfinke/ImportExcel">ImportExcel</a>’s <code class="language-plaintext highlighter-rouge">Get-HTMLTable</code> cmdlet, grab the data, store it in variables, and then export to a TXT file using <code class="language-plaintext highlighter-rouge">Out-File</code> to a fileshare.</p>

<p>When all was said and done, I ended up creating a 50-60 line script that saved our department about 10 hours a week in manual work that was otherwise deemed “too difficult” to automate.</p>

<p>As far as I know, this code is still being used in production.</p>

<p>It was <em>ugly</em> code, but it worked, and gave me a ton of insight in how to use <a href="https://kevinmarquette.github.io/2016-10-28-powershell-everything-you-wanted-to-know-about-pscustomobject/">PSCustomobject</a>’s and using Git to ensure my code was versioned-controlled.</p>

<h2 id="crawling-with-powershell">Crawling with Powershell</h2>

<p>Around the time, I continued to learn more and more about Powershell by attempting to automate other things at work, developed a git repository with VSTS and integrated it into VS Code, shared that code with a co-worker, and encouraged my co-worker to develop his own script and add it to the collection.</p>

<p>I continued developing scripts to deploy a virtual machine in our environment and copy files to 60 physical servers.</p>

<h2 id="running-with-powershell">Running with Powershell</h2>

<p><em>to be continued</em></p>

<h2 id="recap">Recap</h2>

<p>To recap, here’s a few highlights of my journey and observations that I’ve made in the last 2 years:</p>

<ul>
  <li>I’m nowhere close to “running with Powershell” but I intend to keep using Powershell to automate what I can.</li>
  <li>I’ve used Powershell almost daily at work for the last 2 years to automate business “tasks” and produce reports (mostly for myself or my team)</li>
  <li>Companies are hiring people who know Powershell. I’ve nearly doubled my Salary since first being exposed to Powershell about 3 years ago.</li>
  <li>Powershell can now be used on macOS, Linux, and Windows + it’s open-sourced, meaning it will continue to get better.</li>
  <li>Every software service that Microsoft publishes (AD, DNS, DHCP, Azure, O365, Sharepoint, etc) can be managed/automated using Powershell (and Powershell Core!).</li>
</ul>

<p>Overall, don’t be afraid to just dive in and start solving a <em>real</em> problem at work with Powershell, and not just simply learn about the concepts (which is also extremely important).</p>

<p>Here are some ways to jump in and start growing in your career using Powershell:</p>

<ul>
  <li>Join the <a href="http://slack.poshcode.org/">Powershell Slack</a> and read what others are doing with it.</li>
  <li>Go on <a href="https://github.com/trending/powershell">Github</a> and see what others are doing with Powershell.</li>
  <li>Go to the <a href="https://www.reddit.com/r/powershell">Powershell</a> subreddit and read the posts where people talk about what they’ve done with Powershell each month (link <a href="https://old.reddit.com/r/PowerShell/search?q=what+have+you+done&amp;restrict_sr=on&amp;sort=relevance&amp;t=all">here</a>).</li>
</ul>
:ET